import os

from awscli.customizations.commands import BasicCommand
from awscli.customizations.configure.writer import ConfigFileWriter


def register(event_handlers):
    # Note, we're not using building-command-table.configure as the
    # event because we want this to show up in the list of configure
    # subcommands, so it has to be added as part of the Configure
    # command's SUBCOMMANDS table.
    event_handlers.register('session-initialized', add_commands)



def add_commands(session, **kwargs):
    from awscli.customizations.configure import configure
    configure.ConfigureCommand.SUBCOMMANDS.append(
        {'name': 'import', 'command_class': ConfigureImportCommand}
    )


class ConfigureImportCommand(BasicCommand):
    NAME = 'import'

    DESCRIPTION = 'Import CSV credentials generated from console.'

    EXAMPLES = 'aws configure import --csv file://credentials.csv'

    ARG_TABLE = [
        {'name': 'csv',
         'required': True,
         'help_text': ('The CSV credential file generated by the AWS '
                       'web console'),
         'cli_type_name': 'string'},
    ]

    def _run_main(self, parsed_args, parsed_globals):
        contents = parsed_args.csv
        if not contents.strip():
            return
        # Expected format is:
        # User Name,Access Key Id,Secret Access Key
        # "username",akid2,sak2
        # "username2",akid2,sak2
        lines = contents.splitlines()[1:]
        config_file = os.path.expanduser(
            self._session.get_config_variable('config_file'))
        cred_import = CredsImporter(ConfigFileWriter())
        cred_import.import_creds(lines, config_file)


class CredsImporter(object):
    def __init__(self, writer):
        self._config_writer = writer

    def import_creds(self, lines, config_file):
        for line in lines:
            parts = line.rsplit(',', 2)
            name = parts[0][1:-1]
            akid = parts[1]
            sak = parts[2]
            self._config_writer.update_config({
                '__section__': 'profile %s' % name,
                'aws_access_key_id': akid,
                'aws_secret_access_key': sak,
            }, config_file)
